---
title: "titulo"
subtitle: "subtitulo"
format:
  revealjs:
    center: true
    css: [fondo.css]
    incremental: true
    theme: black
    title-slide-attributes:
      data-background-image: "images/fn.png"
      data-background-size: "cover"
      data-background-opacity: "1.0"
---

# Introducci√≥n 

<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const synth = window.speechSynthesis;
        let utterance;
        let speaking = false;
        let paused = false;

        const readIncrementalContent = (element) => {
            if (utterance && synth.speaking) {
                synth.cancel();
            }
            let textToRead = element.textContent;

            if (textToRead.trim() !== '') {
                utterance = new SpeechSynthesisUtterance(textToRead);
                synth.speak(utterance);
            }
        };

        const readCurrentSlide = () => {
            if (utterance && synth.speaking) {
                synth.cancel();
            }
            const currentSlide = document.querySelector('.present');
            const visibleElements = currentSlide.querySelectorAll('h1, h2, h3, h4, h5, h6, p, li:not([aria-hidden="true"]):not(.fragment)');
            let textToRead = '';

            visibleElements.forEach((el) => {
                if (getComputedStyle(el).display !== 'none') {
                    textToRead += el.textContent + ' ';
                }
            });

            if (textToRead.trim() !== '') {
                utterance = new SpeechSynthesisUtterance(textToRead);
                synth.speak(utterance);
            }
        };

        document.addEventListener('keydown', (event) => {
            if (event.key.toLowerCase() === 'q') {
                if (paused) {
                    synth.resume();
                } else {
                    synth.pause();
                }
                paused = !paused;
                speaking = synth.speaking;
            }
        });

        Reveal.on('slidechanged', (event) => {
            readCurrentSlide();
        });

        Reveal.on('fragmentshown', (event) => {
            readIncrementalContent(event.fragment);
        });

        // Initialize Reveal.js
        Reveal.initialize();
    });
</script>